--alt_u_div DEVICE_FAMILY="Cyclone II" LPM_PIPELINE=1 MAXIMIZE_SPEED=5 SKIP_BITS=0 WIDTH_D=2 WIDTH_N=19 WIDTH_Q=19 WIDTH_R=2 clock denominator numerator quotient remainder
--VERSION_BEGIN 8.1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_abs 2008:05:19:10:51:43:SJ cbx_lpm_add_sub 2008:05:19:10:49:01:SJ cbx_lpm_divide 2008:05:21:18:11:28:SJ cbx_mgl 2008:08:08:15:16:18:SJ cbx_stratix 2008:08:05:17:10:23:SJ cbx_stratixii 2008:08:07:13:54:47:SJ cbx_util_mgl 2008:07:18:09:58:54:SJ  VERSION_END


-- Copyright (C) 1991-2008 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION add_sub_lkc (dataa[0..0], datab[0..0])
RETURNS ( cout, result[0..0]);
FUNCTION add_sub_mkc (dataa[1..0], datab[1..0])
RETURNS ( cout, result[1..0]);

--synthesis_resources = lut 68 reg 43 
OPTIONS ALTERA_INTERNAL_OPTION = "{-to DFFQuotient[0]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[1]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[2]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[3]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[4]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[5]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[6]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[7]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[8]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[9]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[10]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[11]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[12]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[13]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[14]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[15]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[16]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[17]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[18]} POWER_UP_LEVEL=LOW;{-to DFFDenominator} POWER_UP_LEVEL=HIGH";

SUBDESIGN alt_u_div_5kf
( 
	clock	:	input;
	denominator[1..0]	:	input;
	numerator[18..0]	:	input;
	quotient[18..0]	:	output;
	remainder[1..0]	:	output;
) 
VARIABLE 
	DFFDenominator[1..0] : dffe
		WITH (
			power_up = "high"
		);
	DFFNumerator[18..0] : dffe;
	DFFQuotient[18..0] : dffe;
	DFFStage[2..0] : dffe;
	add_sub_0 : add_sub_lkc;
	add_sub_1 : add_sub_mkc;
	add_sub_10_result_int[3..0]	:	WIRE;
	add_sub_10_cout	:	WIRE;
	add_sub_10_dataa[2..0]	:	WIRE;
	add_sub_10_datab[2..0]	:	WIRE;
	add_sub_10_result[2..0]	:	WIRE;
	add_sub_11_result_int[3..0]	:	WIRE;
	add_sub_11_cout	:	WIRE;
	add_sub_11_dataa[2..0]	:	WIRE;
	add_sub_11_datab[2..0]	:	WIRE;
	add_sub_11_result[2..0]	:	WIRE;
	add_sub_12_result_int[3..0]	:	WIRE;
	add_sub_12_cout	:	WIRE;
	add_sub_12_dataa[2..0]	:	WIRE;
	add_sub_12_datab[2..0]	:	WIRE;
	add_sub_12_result[2..0]	:	WIRE;
	add_sub_13_result_int[3..0]	:	WIRE;
	add_sub_13_cout	:	WIRE;
	add_sub_13_dataa[2..0]	:	WIRE;
	add_sub_13_datab[2..0]	:	WIRE;
	add_sub_13_result[2..0]	:	WIRE;
	add_sub_14_result_int[3..0]	:	WIRE;
	add_sub_14_cout	:	WIRE;
	add_sub_14_dataa[2..0]	:	WIRE;
	add_sub_14_datab[2..0]	:	WIRE;
	add_sub_14_result[2..0]	:	WIRE;
	add_sub_15_result_int[3..0]	:	WIRE;
	add_sub_15_cout	:	WIRE;
	add_sub_15_dataa[2..0]	:	WIRE;
	add_sub_15_datab[2..0]	:	WIRE;
	add_sub_15_result[2..0]	:	WIRE;
	add_sub_16_result_int[3..0]	:	WIRE;
	add_sub_16_cout	:	WIRE;
	add_sub_16_dataa[2..0]	:	WIRE;
	add_sub_16_datab[2..0]	:	WIRE;
	add_sub_16_result[2..0]	:	WIRE;
	add_sub_17_result_int[3..0]	:	WIRE;
	add_sub_17_cout	:	WIRE;
	add_sub_17_dataa[2..0]	:	WIRE;
	add_sub_17_datab[2..0]	:	WIRE;
	add_sub_17_result[2..0]	:	WIRE;
	add_sub_18_result_int[3..0]	:	WIRE;
	add_sub_18_cout	:	WIRE;
	add_sub_18_dataa[2..0]	:	WIRE;
	add_sub_18_datab[2..0]	:	WIRE;
	add_sub_18_result[2..0]	:	WIRE;
	add_sub_2_result_int[3..0]	:	WIRE;
	add_sub_2_cout	:	WIRE;
	add_sub_2_dataa[2..0]	:	WIRE;
	add_sub_2_datab[2..0]	:	WIRE;
	add_sub_2_result[2..0]	:	WIRE;
	add_sub_3_result_int[3..0]	:	WIRE;
	add_sub_3_cout	:	WIRE;
	add_sub_3_dataa[2..0]	:	WIRE;
	add_sub_3_datab[2..0]	:	WIRE;
	add_sub_3_result[2..0]	:	WIRE;
	add_sub_4_result_int[3..0]	:	WIRE;
	add_sub_4_cout	:	WIRE;
	add_sub_4_dataa[2..0]	:	WIRE;
	add_sub_4_datab[2..0]	:	WIRE;
	add_sub_4_result[2..0]	:	WIRE;
	add_sub_5_result_int[3..0]	:	WIRE;
	add_sub_5_cout	:	WIRE;
	add_sub_5_dataa[2..0]	:	WIRE;
	add_sub_5_datab[2..0]	:	WIRE;
	add_sub_5_result[2..0]	:	WIRE;
	add_sub_6_result_int[3..0]	:	WIRE;
	add_sub_6_cout	:	WIRE;
	add_sub_6_dataa[2..0]	:	WIRE;
	add_sub_6_datab[2..0]	:	WIRE;
	add_sub_6_result[2..0]	:	WIRE;
	add_sub_7_result_int[3..0]	:	WIRE;
	add_sub_7_cout	:	WIRE;
	add_sub_7_dataa[2..0]	:	WIRE;
	add_sub_7_datab[2..0]	:	WIRE;
	add_sub_7_result[2..0]	:	WIRE;
	add_sub_8_result_int[3..0]	:	WIRE;
	add_sub_8_cout	:	WIRE;
	add_sub_8_dataa[2..0]	:	WIRE;
	add_sub_8_datab[2..0]	:	WIRE;
	add_sub_8_result[2..0]	:	WIRE;
	add_sub_9_result_int[3..0]	:	WIRE;
	add_sub_9_cout	:	WIRE;
	add_sub_9_dataa[2..0]	:	WIRE;
	add_sub_9_datab[2..0]	:	WIRE;
	add_sub_9_result[2..0]	:	WIRE;
	aclr	: NODE;
	clk_en	: NODE;
	DenominatorIn[59..0]	: WIRE;
	DenominatorIn_tmp[59..0]	: WIRE;
	gnd_wire	: WIRE;
	nose[379..0]	: WIRE;
	NumeratorIn[379..0]	: WIRE;
	NumeratorIn_tmp[379..0]	: WIRE;
	prestg[56..0]	: WIRE;
	quotient_tmp[18..0]	: WIRE;
	sel[39..0]	: WIRE;
	selnose[379..0]	: WIRE;
	StageIn[59..0]	: WIRE;
	StageIn_tmp[59..0]	: WIRE;
	StageOut[56..0]	: WIRE;
	vcc_wire	: WIRE;

BEGIN 
	DFFDenominator[].clk = clock;
	DFFDenominator[].d = ( denominator[]);
	DFFDenominator[].ena = clk_en;
	DFFDenominator[].prn = (! aclr);
	DFFNumerator[].clk = clock;
	DFFNumerator[].clrn = (! aclr);
	DFFNumerator[].d = ( numerator[]);
	DFFNumerator[].ena = clk_en;
	DFFQuotient[].clk = clock;
	DFFQuotient[18..9].clrn = (! aclr);
	DFFQuotient[].d = ( (! selnose[0..0]), (! selnose[20..20]), (! selnose[40..40]), (! selnose[60..60]), (! selnose[80..80]), (! selnose[100..100]), (! selnose[120..120]), (! selnose[140..140]), (! selnose[160..160]), (! selnose[180..180]), vcc_wire, vcc_wire, vcc_wire, vcc_wire, vcc_wire, vcc_wire, vcc_wire, vcc_wire, vcc_wire);
	DFFQuotient[].ena = clk_en;
	DFFQuotient[8..0].prn = (! aclr);
	DFFStage[].clk = clock;
	DFFStage[].clrn = (! aclr);
	DFFStage[].d = ( StageOut[29..27]);
	DFFStage[].ena = clk_en;
	add_sub_0.dataa[0..0] = NumeratorIn[18..18];
	add_sub_0.datab[0..0] = DenominatorIn[0..0];
	add_sub_1.dataa[] = ( StageIn[3..3], NumeratorIn[36..36]);
	add_sub_1.datab[1..0] = DenominatorIn[4..3];
	add_sub_10_result_int[] = (0, add_sub_10_dataa[]) - (0, add_sub_10_datab[]);
	add_sub_10_result[] = add_sub_10_result_int[2..0];
	add_sub_10_cout = !add_sub_10_result_int[3];
	add_sub_10_dataa[] = ( StageIn[31..30], NumeratorIn[198..198]);
	add_sub_10_datab[] = DenominatorIn[32..30];
	add_sub_11_result_int[] = (0, add_sub_11_dataa[]) - (0, add_sub_11_datab[]);
	add_sub_11_result[] = add_sub_11_result_int[2..0];
	add_sub_11_cout = !add_sub_11_result_int[3];
	add_sub_11_dataa[] = ( StageIn[34..33], NumeratorIn[216..216]);
	add_sub_11_datab[] = DenominatorIn[35..33];
	add_sub_12_result_int[] = (0, add_sub_12_dataa[]) - (0, add_sub_12_datab[]);
	add_sub_12_result[] = add_sub_12_result_int[2..0];
	add_sub_12_cout = !add_sub_12_result_int[3];
	add_sub_12_dataa[] = ( StageIn[37..36], NumeratorIn[234..234]);
	add_sub_12_datab[] = DenominatorIn[38..36];
	add_sub_13_result_int[] = (0, add_sub_13_dataa[]) - (0, add_sub_13_datab[]);
	add_sub_13_result[] = add_sub_13_result_int[2..0];
	add_sub_13_cout = !add_sub_13_result_int[3];
	add_sub_13_dataa[] = ( StageIn[40..39], NumeratorIn[252..252]);
	add_sub_13_datab[] = DenominatorIn[41..39];
	add_sub_14_result_int[] = (0, add_sub_14_dataa[]) - (0, add_sub_14_datab[]);
	add_sub_14_result[] = add_sub_14_result_int[2..0];
	add_sub_14_cout = !add_sub_14_result_int[3];
	add_sub_14_dataa[] = ( StageIn[43..42], NumeratorIn[270..270]);
	add_sub_14_datab[] = DenominatorIn[44..42];
	add_sub_15_result_int[] = (0, add_sub_15_dataa[]) - (0, add_sub_15_datab[]);
	add_sub_15_result[] = add_sub_15_result_int[2..0];
	add_sub_15_cout = !add_sub_15_result_int[3];
	add_sub_15_dataa[] = ( StageIn[46..45], NumeratorIn[288..288]);
	add_sub_15_datab[] = DenominatorIn[47..45];
	add_sub_16_result_int[] = (0, add_sub_16_dataa[]) - (0, add_sub_16_datab[]);
	add_sub_16_result[] = add_sub_16_result_int[2..0];
	add_sub_16_cout = !add_sub_16_result_int[3];
	add_sub_16_dataa[] = ( StageIn[49..48], NumeratorIn[306..306]);
	add_sub_16_datab[] = DenominatorIn[50..48];
	add_sub_17_result_int[] = (0, add_sub_17_dataa[]) - (0, add_sub_17_datab[]);
	add_sub_17_result[] = add_sub_17_result_int[2..0];
	add_sub_17_cout = !add_sub_17_result_int[3];
	add_sub_17_dataa[] = ( StageIn[52..51], NumeratorIn[324..324]);
	add_sub_17_datab[] = DenominatorIn[53..51];
	add_sub_18_result_int[] = (0, add_sub_18_dataa[]) - (0, add_sub_18_datab[]);
	add_sub_18_result[] = add_sub_18_result_int[2..0];
	add_sub_18_cout = !add_sub_18_result_int[3];
	add_sub_18_dataa[] = ( StageIn[55..54], NumeratorIn[342..342]);
	add_sub_18_datab[] = DenominatorIn[56..54];
	add_sub_2_result_int[] = (0, add_sub_2_dataa[]) - (0, add_sub_2_datab[]);
	add_sub_2_result[] = add_sub_2_result_int[2..0];
	add_sub_2_cout = !add_sub_2_result_int[3];
	add_sub_2_dataa[] = ( StageIn[7..6], NumeratorIn[54..54]);
	add_sub_2_datab[] = DenominatorIn[8..6];
	add_sub_3_result_int[] = (0, add_sub_3_dataa[]) - (0, add_sub_3_datab[]);
	add_sub_3_result[] = add_sub_3_result_int[2..0];
	add_sub_3_cout = !add_sub_3_result_int[3];
	add_sub_3_dataa[] = ( StageIn[10..9], NumeratorIn[72..72]);
	add_sub_3_datab[] = DenominatorIn[11..9];
	add_sub_4_result_int[] = (0, add_sub_4_dataa[]) - (0, add_sub_4_datab[]);
	add_sub_4_result[] = add_sub_4_result_int[2..0];
	add_sub_4_cout = !add_sub_4_result_int[3];
	add_sub_4_dataa[] = ( StageIn[13..12], NumeratorIn[90..90]);
	add_sub_4_datab[] = DenominatorIn[14..12];
	add_sub_5_result_int[] = (0, add_sub_5_dataa[]) - (0, add_sub_5_datab[]);
	add_sub_5_result[] = add_sub_5_result_int[2..0];
	add_sub_5_cout = !add_sub_5_result_int[3];
	add_sub_5_dataa[] = ( StageIn[16..15], NumeratorIn[108..108]);
	add_sub_5_datab[] = DenominatorIn[17..15];
	add_sub_6_result_int[] = (0, add_sub_6_dataa[]) - (0, add_sub_6_datab[]);
	add_sub_6_result[] = add_sub_6_result_int[2..0];
	add_sub_6_cout = !add_sub_6_result_int[3];
	add_sub_6_dataa[] = ( StageIn[19..18], NumeratorIn[126..126]);
	add_sub_6_datab[] = DenominatorIn[20..18];
	add_sub_7_result_int[] = (0, add_sub_7_dataa[]) - (0, add_sub_7_datab[]);
	add_sub_7_result[] = add_sub_7_result_int[2..0];
	add_sub_7_cout = !add_sub_7_result_int[3];
	add_sub_7_dataa[] = ( StageIn[22..21], NumeratorIn[144..144]);
	add_sub_7_datab[] = DenominatorIn[23..21];
	add_sub_8_result_int[] = (0, add_sub_8_dataa[]) - (0, add_sub_8_datab[]);
	add_sub_8_result[] = add_sub_8_result_int[2..0];
	add_sub_8_cout = !add_sub_8_result_int[3];
	add_sub_8_dataa[] = ( StageIn[25..24], NumeratorIn[162..162]);
	add_sub_8_datab[] = DenominatorIn[26..24];
	add_sub_9_result_int[] = (0, add_sub_9_dataa[]) - (0, add_sub_9_datab[]);
	add_sub_9_result[] = add_sub_9_result_int[2..0];
	add_sub_9_cout = !add_sub_9_result_int[3];
	add_sub_9_dataa[] = ( StageIn[28..27], NumeratorIn[180..180]);
	add_sub_9_datab[] = DenominatorIn[29..27];
	aclr = GND;
	clk_en = VCC;
	DenominatorIn[] = DenominatorIn_tmp[];
	DenominatorIn_tmp[] = ( DenominatorIn[56..30], ( gnd_wire, DFFDenominator[1..0].q), DenominatorIn[26..0], ( gnd_wire, denominator[]));
	gnd_wire = B"0";
	nose[] = ( B"0000000000000000000", add_sub_18_cout, B"0000000000000000000", add_sub_17_cout, B"0000000000000000000", add_sub_16_cout, B"0000000000000000000", add_sub_15_cout, B"0000000000000000000", add_sub_14_cout, B"0000000000000000000", add_sub_13_cout, B"0000000000000000000", add_sub_12_cout, B"0000000000000000000", add_sub_11_cout, B"0000000000000000000", add_sub_10_cout, B"0000000000000000000", add_sub_9_cout, B"0000000000000000000", add_sub_8_cout, B"0000000000000000000", add_sub_7_cout, B"0000000000000000000", add_sub_6_cout, B"0000000000000000000", add_sub_5_cout, B"0000000000000000000", add_sub_4_cout, B"0000000000000000000", add_sub_3_cout, B"0000000000000000000", add_sub_2_cout, B"0000000000000000000", add_sub_1.cout, B"0000000000000000000", add_sub_0.cout);
	NumeratorIn[] = NumeratorIn_tmp[];
	NumeratorIn_tmp[] = ( NumeratorIn[360..190], DFFNumerator[18..0].q, NumeratorIn[170..0], numerator[]);
	prestg[] = ( add_sub_18_result[], add_sub_17_result[], add_sub_16_result[], add_sub_15_result[], add_sub_14_result[], add_sub_13_result[], add_sub_12_result[], add_sub_11_result[], add_sub_10_result[], add_sub_9_result[], add_sub_8_result[], add_sub_7_result[], add_sub_6_result[], add_sub_5_result[], add_sub_4_result[], add_sub_3_result[], add_sub_2_result[], GND, add_sub_1.result[], B"00", add_sub_0.result[]);
	quotient[] = quotient_tmp[];
	quotient_tmp[] = ( DFFQuotient[18..9].q, (! selnose[200..200]), (! selnose[220..220]), (! selnose[240..240]), (! selnose[260..260]), (! selnose[280..280]), (! selnose[300..300]), (! selnose[320..320]), (! selnose[340..340]), (! selnose[360..360]));
	remainder[1..0] = StageIn[58..57];
	sel[] = ( gnd_wire, (sel[39..39] # DenominatorIn[58..58]), gnd_wire, (sel[37..37] # DenominatorIn[55..55]), gnd_wire, (sel[35..35] # DenominatorIn[52..52]), gnd_wire, (sel[33..33] # DenominatorIn[49..49]), gnd_wire, (sel[31..31] # DenominatorIn[46..46]), gnd_wire, (sel[29..29] # DenominatorIn[43..43]), gnd_wire, (sel[27..27] # DenominatorIn[40..40]), gnd_wire, (sel[25..25] # DenominatorIn[37..37]), gnd_wire, (sel[23..23] # DenominatorIn[34..34]), gnd_wire, (sel[21..21] # DenominatorIn[31..31]), gnd_wire, (sel[19..19] # DenominatorIn[28..28]), gnd_wire, (sel[17..17] # DenominatorIn[25..25]), gnd_wire, (sel[15..15] # DenominatorIn[22..22]), gnd_wire, (sel[13..13] # DenominatorIn[19..19]), gnd_wire, (sel[11..11] # DenominatorIn[16..16]), gnd_wire, (sel[9..9] # DenominatorIn[13..13]), gnd_wire, (sel[7..7] # DenominatorIn[10..10]), gnd_wire, (sel[5..5] # DenominatorIn[7..7]), gnd_wire, (sel[3..3] # DenominatorIn[4..4]), gnd_wire, (sel[1..1] # DenominatorIn[1..1]));
	selnose[] = ( (! nose[379..379]), (! nose[378..378]), (! nose[377..377]), (! nose[376..376]), (! nose[375..375]), (! nose[374..374]), (! nose[373..373]), (! nose[372..372]), (! nose[371..371]), (! nose[370..370]), (! nose[369..369]), (! nose[368..368]), (! nose[367..367]), (! nose[366..366]), (! nose[365..365]), (! nose[364..364]), (! nose[363..363]), ((! nose[362..362]) # sel[39..39]), ((! nose[361..361]) # sel[38..38]), (! nose[360..360]), (! nose[359..359]), (! nose[358..358]), (! nose[357..357]), (! nose[356..356]), (! nose[355..355]), (! nose[354..354]), (! nose[353..353]), (! nose[352..352]), (! nose[351..351]), (! nose[350..350]), (! nose[349..349]), (! nose[348..348]), (! nose[347..347]), (! nose[346..346]), (! nose[345..345]), (! nose[344..344]), ((! nose[343..343]) # sel[37..37]), ((! nose[342..342]) # sel[36..36]), (! nose[341..341]), (! nose[340..340]), (! nose[339..339]), (! nose[338..338]), (! nose[337..337]), (! nose[336..336]), (! nose[335..335]), (! nose[334..334]), (! nose[333..333]), (! nose[332..332]), (! nose[331..331]), (! nose[330..330]), (! nose[329..329]), (! nose[328..328]), (! nose[327..327]), (! nose[326..326]), (! nose[325..325]), ((! nose[324..324]) # sel[35..35]), ((! nose[323..323]) # sel[34..34]), (! nose[322..322]), (! nose[321..321]), (! nose[320..320]), (! nose[319..319]), (! nose[318..318]), (! nose[317..317]), (! nose[316..316]), (! nose[315..315]), (! nose[314..314]), (! nose[313..313]), (! nose[312..312]), (! nose[311..311]), (! nose[310..310]), (! nose[309..309]), (! nose[308..308]), (! nose[307..307]), (! nose[306..306]), ((! nose[305..305]) # sel[33..33]), ((! nose[304..304]) # sel[32..32]), (! nose[303..303]), (! nose[302..302]), (! nose[301..301]), (! nose[300..300]), (! nose[299..299]), (! nose[298..298]), (! nose[297..297]), (! nose[296..296]), (! nose[295..295]), (! nose[294..294]), (! nose[293..293]), (! nose[292..292]), (! nose[291..291]), (! nose[290..290]), (! nose[289..289]), (! nose[288..288]), (! nose[287..287]), ((! nose[286..286]) # sel[31..31]), ((! nose[285..285]) # sel[30..30]), (! nose[284..284]), (! nose[283..283]), (! nose[282..282]), (! nose[281..281]), (! nose[280..280]), (! nose[279..279]), (! nose[278..278]), (! nose[277..277]), (! nose[276..276]), (! nose[275..275]), (! nose[274..274]), (! nose[273..273]), (! nose[272..272]), (! nose[271..271]), (! nose[270..270]), (! nose[269..269]), (! nose[268..268]), ((! nose[267..267]) # sel[29..29]), ((! nose[266..266]) # sel[28..28]), (! nose[265..265]), (! nose[264..264]), (! nose[263..263]), (! nose[262..262]), (! nose[261..261]), (! nose[260..260]), (! nose[259..259]), (! nose[258..258]), (! nose[257..257]), (! nose[256..256]), (! nose[255..255]), (! nose[254..254]), (! nose[253..253]), (! nose[252..252]), (! nose[251..251]), (! nose[250..250]), (! nose[249..249]), ((! nose[248..248]) # sel[27..27]), ((! nose[247..247]) # sel[26..26]), (! nose[246..246]), (! nose[245..245]), (! nose[244..244]), (! nose[243..243]), (! nose[242..242]), (! nose[241..241]), (! nose[240..240]), (! nose[239..239]), (! nose[238..238]), (! nose[237..237]), (! nose[236..236]), (! nose[235..235]), (! nose[234..234]), (! nose[233..233]), (! nose[232..232]), (! nose[231..231]), (! nose[230..230]), ((! nose[229..229]) # sel[25..25]), ((! nose[228..228]) # sel[24..24]), (! nose[227..227]), (! nose[226..226]), (! nose[225..225]), (! nose[224..224]), (! nose[223..223]), (! nose[222..222]), (! nose[221..221]), (! nose[220..220]), (! nose[219..219]), (! nose[218..218]), (! nose[217..217]), (! nose[216..216]), (! nose[215..215]), (! nose[214..214]), (! nose[213..213]), (! nose[212..212]), (! nose[211..211]), ((! nose[210..210]) # sel[23..23]), ((! nose[209..209]) # sel[22..22]), (! nose[208..208]), (! nose[207..207]), (! nose[206..206]), (! nose[205..205]), (! nose[204..204]), (! nose[203..203]), (! nose[202..202]), (! nose[201..201]), (! nose[200..200]), (! nose[199..199]), (! nose[198..198]), (! nose[197..197]), (! nose[196..196]), (! nose[195..195]), (! nose[194..194]), (! nose[193..193]), (! nose[192..192]), ((! nose[191..191]) # sel[21..21]), ((! nose[190..190]) # sel[20..20]), (! nose[189..189]), (! nose[188..188]), (! nose[187..187]), (! nose[186..186]), (! nose[185..185]), (! nose[184..184]), (! nose[183..183]), (! nose[182..182]), (! nose[181..181]), (! nose[180..180]), (! nose[179..179]), (! nose[178..178]), (! nose[177..177]), (! nose[176..176]), (! nose[175..175]), (! nose[174..174]), (! nose[173..173]), ((! nose[172..172]) # sel[19..19]), ((! nose[171..171]) # sel[18..18]), (! nose[170..170]), (! nose[169..169]), (! nose[168..168]), (! nose[167..167]), (! nose[166..166]), (! nose[165..165]), (! nose[164..164]), (! nose[163..163]), (! nose[162..162]), (! nose[161..161]), (! nose[160..160]), (! nose[159..159]), (! nose[158..158]), (! nose[157..157]), (! nose[156..156]), (! nose[155..155]), (! nose[154..154]), ((! nose[153..153]) # sel[17..17]), ((! nose[152..152]) # sel[16..16]), (! nose[151..151]), (! nose[150..150]), (! nose[149..149]), (! nose[148..148]), (! nose[147..147]), (! nose[146..146]), (! nose[145..145]), (! nose[144..144]), (! nose[143..143]), (! nose[142..142]), (! nose[141..141]), (! nose[140..140]), (! nose[139..139]), (! nose[138..138]), (! nose[137..137]), (! nose[136..136]), (! nose[135..135]), ((! nose[134..134]) # sel[15..15]), ((! nose[133..133]) # sel[14..14]), (! nose[132..132]), (! nose[131..131]), (! nose[130..130]), (! nose[129..129]), (! nose[128..128]), (! nose[127..127]), (! nose[126..126]), (! nose[125..125]), (! nose[124..124]), (! nose[123..123]), (! nose[122..122]), (! nose[121..121]), (! nose[120..120]), (! nose[119..119]), (! nose[118..118]), (! nose[117..117]), (! nose[116..116]), ((! nose[115..115]) # sel[13..13]), ((! nose[114..114]) # sel[12..12]), (! nose[113..113]), (! nose[112..112]), (! nose[111..111]), (! nose[110..110]), (! nose[109..109]), (! nose[108..108]), (! nose[107..107]), (! nose[106..106]), (! nose[105..105]), (! nose[104..104]), (! nose[103..103]), (! nose[102..102]), (! nose[101..101]), (! nose[100..100]), (! nose[99..99]), (! nose[98..98]), (! nose[97..97]), ((! nose[96..96]) # sel[11..11]), ((! nose[95..95]) # sel[10..10]), (! nose[94..94]), (! nose[93..93]), (! nose[92..92]), (! nose[91..91]), (! nose[90..90]), (! nose[89..89]), (! nose[88..88]), (! nose[87..87]), (! nose[86..86]), (! nose[85..85]), (! nose[84..84]), (! nose[83..83]), (! nose[82..82]), (! nose[81..81]), (! nose[80..80]), (! nose[79..79]), (! nose[78..78]), ((! nose[77..77]) # sel[9..9]), ((! nose[76..76]) # sel[8..8]), (! nose[75..75]), (! nose[74..74]), (! nose[73..73]), (! nose[72..72]), (! nose[71..71]), (! nose[70..70]), (! nose[69..69]), (! nose[68..68]), (! nose[67..67]), (! nose[66..66]), (! nose[65..65]), (! nose[64..64]), (! nose[63..63]), (! nose[62..62]), (! nose[61..61]), (! nose[60..60]), (! nose[59..59]), ((! nose[58..58]) # sel[7..7]), ((! nose[57..57]) # sel[6..6]), (! nose[56..56]), (! nose[55..55]), (! nose[54..54]), (! nose[53..53]), (! nose[52..52]), (! nose[51..51]), (! nose[50..50]), (! nose[49..49]), (! nose[48..48]), (! nose[47..47]), (! nose[46..46]), (! nose[45..45]), (! nose[44..44]), (! nose[43..43]), (! nose[42..42]), (! nose[41..41]), (! nose[40..40]), ((! nose[39..39]) # sel[5..5]), ((! nose[38..38]) # sel[4..4]), (! nose[37..37]), (! nose[36..36]), (! nose[35..35]), (! nose[34..34]), (! nose[33..33]), (! nose[32..32]), (! nose[31..31]), (! nose[30..30]), (! nose[29..29]), (! nose[28..28]), (! nose[27..27]), (! nose[26..26]), (! nose[25..25]), (! nose[24..24]), (! nose[23..23]), (! nose[22..22]), (! nose[21..21]), ((! nose[20..20]) # sel[3..3]), ((! nose[19..19]) # sel[2..2]), (! nose[18..18]), (! nose[17..17]), (! nose[16..16]), (! nose[15..15]), (! nose[14..14]), (! nose[13..13]), (! nose[12..12]), (! nose[11..11]), (! nose[10..10]), (! nose[9..9]), (! nose[8..8]), (! nose[7..7]), (! nose[6..6]), (! nose[5..5]), (! nose[4..4]), (! nose[3..3]), (! nose[2..2]), ((! nose[1..1]) # sel[1..1]), ((! nose[0..0]) # sel[0..0]));
	StageIn[] = StageIn_tmp[];
	StageIn_tmp[] = ( StageOut[56..30], DFFStage[2..0].q, StageOut[26..0], B"000");
	StageOut[] = ( ((( StageIn[55..54], NumeratorIn[342..342]) & selnose[360..360]) # (prestg[56..54] & (! selnose[360..360]))), ((( StageIn[52..51], NumeratorIn[324..324]) & selnose[340..340]) # (prestg[53..51] & (! selnose[340..340]))), ((( StageIn[49..48], NumeratorIn[306..306]) & selnose[320..320]) # (prestg[50..48] & (! selnose[320..320]))), ((( StageIn[46..45], NumeratorIn[288..288]) & selnose[300..300]) # (prestg[47..45] & (! selnose[300..300]))), ((( StageIn[43..42], NumeratorIn[270..270]) & selnose[280..280]) # (prestg[44..42] & (! selnose[280..280]))), ((( StageIn[40..39], NumeratorIn[252..252]) & selnose[260..260]) # (prestg[41..39] & (! selnose[260..260]))), ((( StageIn[37..36], NumeratorIn[234..234]) & selnose[240..240]) # (prestg[38..36] & (! selnose[240..240]))), ((( StageIn[34..33], NumeratorIn[216..216]) & selnose[220..220]) # (prestg[35..33] & (! selnose[220..220]))), ((( StageIn[31..30], NumeratorIn[198..198]) & selnose[200..200]) # (prestg[32..30] & (! selnose[200..200]))), ((( StageIn[28..27], NumeratorIn[180..180]) & selnose[180..180]) # (prestg[29..27] & (! selnose[180..180]))), ((( StageIn[25..24], NumeratorIn[162..162]) & selnose[160..160]) # (prestg[26..24] & (! selnose[160..160]))), ((( StageIn[22..21], NumeratorIn[144..144]) & selnose[140..140]) # (prestg[23..21] & (! selnose[140..140]))), ((( StageIn[19..18], NumeratorIn[126..126]) & selnose[120..120]) # (prestg[20..18] & (! selnose[120..120]))), ((( StageIn[16..15], NumeratorIn[108..108]) & selnose[100..100]) # (prestg[17..15] & (! selnose[100..100]))), ((( StageIn[13..12], NumeratorIn[90..90]) & selnose[80..80]) # (prestg[14..12] & (! selnose[80..80]))), ((( StageIn[10..9], NumeratorIn[72..72]) & selnose[60..60]) # (prestg[11..9] & (! selnose[60..60]))), ((( StageIn[7..6], NumeratorIn[54..54]) & selnose[40..40]) # (prestg[8..6] & (! selnose[40..40]))), ((( StageIn[4..3], NumeratorIn[36..36]) & selnose[20..20]) # (prestg[5..3] & (! selnose[20..20]))), ((( StageIn[1..0], NumeratorIn[18..18]) & selnose[0..0]) # (prestg[2..0] & (! selnose[0..0]))));
	vcc_wire = B"1";
END;
--VALID FILE
